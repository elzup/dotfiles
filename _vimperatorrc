"3.7 (created: 2013/04/03 18:20:07)


source! "C:\\Users\\hiro\\_vimperatorrc.local"

" vim: set ft=vimperator:


"Ctrl+rで再起動,Ctrl+hでヘルプ ,sで設定ファイル再読込
noremap ,s :so C:\\Users\\Mahito\\_vimperatorrc<CR>

"windowsのｺﾋﾟﾍﾟ、切り取り、undo、redo、すべて選択ｼｮｰﾄｶｯﾄｷｰを有効にする

inoremap <C-a> <Insert><C-a><Insert>
inoremap <C-b> b

nnoremap ,r :mapc<CR>:cmapc<CR>:imapc<CR>:source _vimperatorrc<CR>


"補完選択
cnoremap <C-n> <Tab>
cnoremap <C-p> <S-Tab>

"ブックマークリスト
nnoremap ,b :bmarks<Space>


" Backspace に戻るを割り当て
noremap <BS> <A-Left>

" スクロールを５行単位
nnoremap j 5<C-e>
nnoremap k 5<C-y>

"タブ移動
nnoremap h gT
nnoremap l gt

inoremap <c-f> f

" フォカース
nnoremap <c-g> :focussearchbar<CR><Down>

"ヤンク拡張
nnoremap ,yt :js util.copyToClipboard(buffer.title);<CR>:echo 'Copied text to clipboard[title]: ' + buffer.title<CR>
nnoremap ,yu :js util.copyToClipboard(buffer.URL);<CR>:echo 'Copied text to clipboard[url]: ' + buffer.title<CR>
nnoremap ,yy :js util.copyToClipboard(buffer.title + " " + buffer.URL);<CR>:echo 'Copied text to clipboard[title & url]: ' + buffer.title + " " + buffer.URL<CR>
nnoremap ,yb :js util.copyToClipboard(buffer.);<Left><Left>
nnoremap ,ys :shorturi<CR>
nnoremap ,y/ :shorturi<CR>

js <<EOM

function getShortUri(url) {
    let uri = 'https://www.googleapis.com/urlshortener/v1/url';
    let xhr = new XMLHttpRequest();
    xhr.open("post", uri, false);
    xhr.setRequestHeader("Content-Type", "application/json");
    xhr.send(JSON.stringify({ longUrl: url }));
    return JSON.parse(xhr.responseText).id;
}

commands.addUserCommand(
    ["shorturi"],
    "get google short URI this page",
    function(args, bang, count){
        let url = buffer.URL;
        if (args[0]) {url = args[0];}
        let result = getShortUri(url);
        util.copyToClipboard(result);
        liberator.echo('Created shortURL: ' + result + "<--" + url);
    }
);


commands.addUserCommand(
    ["now"],
    "echo timestamp just now",
    function(args, bang, count){
        var d = new Date();
        liberator.echo((d.getYear() + 1900) + '-' + d.getMonth() + '-' +  d.getDay() + ' ' + d.getHours() + ':' + d.getMinutes() + ':' + d.getSeconds());
    }
);

commands.addUserCommand(
    ["yankinfo"],
    "get current page info and yank to clipboard",
    function(args, bang, count){
        let result = getShortUri(buffer.URL);
        util.copyToClipboard(result);
        liberator.echo("copyed short url");
    },
    {
        subCommands: [
            new Command(
            ["title"],
            "page title yank to clipboard",
            function() {
                util.copyToClipboard(buffer.title);
                liberator.echo("yanked title: " + buffer.title);
            }),
            new Command(
            ["url"],
            "page url yank to clipboard",
            function() {
                util.copyToClipboard(buffer.URL);
                liberator.echo("yanked url: " + buffer.URL);
            }),
            new Command(
            ["titleandurl"],
            "page title and url yank to clipboard",
            function() {
                let text = [buffer.title, buffer.URL].join(" ");
                util.copyToClipboard(text);
                liberator.echo("yanked title and url: " + text);
            }),
            new Command(
            ["titleandsurl"],
            "page title and shorturl yank to clipboard",
            function() {
                let text = [buffer.title, getShortUri(buffer.URL)].join(" ");
                util.copyToClipboard(text);
                liberator.echo("yanked title and short url: " + text);
            }),
            new Command(
            ["shorturl"],
            "page shorturl yank to clipboard",
            function() {
                let result = getShortUri(buffer.URL);
                util.copyToClipboard(result);
                liberator.echo("yanked short url: " + result);
            }),
        ]
    }
);

commands.addUserCommand(
    ["focuss[earchbar]"],
    "focus to searchbar",
    function() {
        if (window.content.window.location.hostname.indexOf("www.google.co.jp") != -1) 
        {
            window.content.window.document.getElementsByName("q")[0].focus();
            liberator.echo("get focusd");
        }
    }
);

EOM
"//        echo 'Copied text to clipboard[shorturl]: ' + result;

noremap zu :undo<TAB>

"現URL指定で開く
"nnoremap <C-o> yo<C-v>

vnoremap <silent> <C-g> y<Esc><Esc>P

"タブグループマネージャのタブ移動
nnoremap <C-h> <C-Up>t<CR>d
nnoremap <C-l> <C-Down>t<CR>d

"ブックマーク
nnoremap <S-b> :bmarks<Space>

"自動フォーカスの防止
set focuscontent
" GUI
"set guioptions=mT
"ブラウザタイトル
set titlestring="火狐⊂('ω'⊂ )"
"ex mode でインクリメント補完
" set wildoptions=auto
"クイックリンク設定
set hintchars=asdfghjklmn
" コマンドラインでIMEをオフ
let g:imeoff='cmd'

"smooth scroll option
let smooth_scroll_duration=200

" CmdLine
hi Normal     color : LightYellow    ; background: #111 ; font-size: 10pt ; 
hi CmdLine    color : LightYellow    ; background: #111 ; font-size: 10pt ; 
hi InfoMsg    color : LightYellow    ; background: #111 ; font-size: 10pt ; 
hi ModeMsg    color : LightYellow    ; background: #111 ; font-size: 10pt ; 
hi MoreMsg    color : LimeGreen      ; background: #111 ; 
hi LineNr     color : DeepPink       ; background: #111 ; font-size: 12pt ; 
hi Question   color : Yellow         ; background: #111 ; font-size: 12pt ; 
hi WarningMsg color : DeepPink       ; background: #111 ; font-size: 12pt ; 
hi ErrorMsg   color : white          ; background: red  ; font-size: 12pt ; 
hi NonText    color : blue           ; background: #111 ; 
hi Null       color : CornflowerBlue ; 
hi URL        color : LightBlue      ; 

" Hint
hi Hint z-index:5000; font-size:14px; color:white; background-color:green; border-color:ButtonShadow; border-width:0px; border-style:solid; padding:0px 2px 0px 2px; position:absolute; font-family: Menlo, Consolas, Monaco, monospace; text-transform: uppercase;

" clock style
"let clock_format='[%t %d]'
"let clock_position='liberator-commadline-prompt'
"let clock_after='false'
"style -name clock chrome://* <<EOM
"#liberator-plugin-clock-box > * {
"    color: green !important;
"}
"EOM

"websearch.vimpr
" スターテスライン

nnoremap ,sa :wsalc<Space>
nnoremap ,st :wsthesaurus<Space>
nnoremap ,se :wsejje<Space>
nnoremap ,sf :wsforvo<Space>
nnoremap ,sy :wsyoutube<Space>
nnoremap ,sk :wskanjifont<Space>

nnoremap ,sg :tabopen google<Space>
nnoremap ,sw :tabopen wikipedia<Space>
nnoremap s :tabopen google<Space>

nnoremap ,df <Insert><C-f><Esc><Insert>
nnoremap ,dna :set gui=navigation<CR>
nnoremap ,dnn :set gui=nonavigation<CR>

nnoremap ,dtn :set gui=tab<CR>
nnoremap ,dta :set gui=notab<CR>

"新規ウィンドウ, リスタートのアンバインド
nnoremap <C-n> :
inoremap <C-n> <Down>
inoremap <C-p> <Up>

nnoremap ,h :history<Space>

javascript <<JS
let statusLine = document.getElementById("liberator-statusline");
let bottomBar = document.getElementById("liberator-bottombar");

// ステータスバーにブックマークアイコンを移動
let (statusBar = document.getElementById("status-bar")) {
  let (id = "star-button") {
    if(!document.getElementById("panel-" + id)) {
      let panel = document.createElement("statusbarpanel");
      panel.setAttribute("id", "panel-" + id);
      let (icon = document.getElementById(id)) {
        icon.setAttribute("class", "");
        panel.appendChild(icon);
      }
      statusBar.insertBefore(panel, statusBar.firstChild);
    }
  }
}
// ステータスラインの横にステータスバーを移動
let (statusBar = document.getElementById("status-bar")) {
  statusBar.style.maxHeight = "20px";
  bottomBar.appendChild(statusBar);
}
// ステータスラインにfaviconを移動
let (favicon = document.getElementById("page-proxy-stack")) {
  if (favicon != null) {
      favicon.style.maxWidth = favicon.style.maxHeight = "20px"
      statusLine.insertBefore(favicon, statusLine.firstChild);
  }
}
JS

""nico controller
"map ,ni :nicoinfo
"map ,np :nicopause
"map ,nm :nicomute
"map ,nv :nicommentvisible
"map ,nz :nicosize
"map ,ns :nicoseek
"
"
"javascript <<EOM
"// [N]-
"// N 秒前にシークする。
"// 指定なしの場合 10 秒前。
"liberator.mappings.addUserMap(
"    [liberator.modes.NORMAL],
"    ['-'],
"    'seek by count backward',
"    function(count) {
"        if(count === -1) count = 10;
"        liberator.execute(':nicoseek! ' + '-' + count);
"    },
"    { flags: liberator.Mappings.flags.COUNT }
");
"
"// [N]+
"// N 秒後にシークする。
"// 指定なしの場合 10 秒後。
"liberator.mappings.addUserMap(
"    [liberator.modes.NORMAL],
"    ['+'],
"    'seek by count forward',
"    function(count) {
"        if(count === -1) count = 10;
"        liberator.execute(':nicoseek! ' + count);
"    },
"    { flags: liberator.Mappings.flags.COUNT }
");
"EOM
"
"Twittperator config
let g:twittperator_use_ssl_connection_for_api_ep = 1
let g:twittperator_use_chirp = 1
let g:twittperator_track_words = "ざっぷ,マイクラ,Minecraft,電大"
let g:twittperator_screen_name = "arzzup"
nnoremap ,tl :tw<CR>
nnoremap ,tw :tw<Space>
nnoremap ,tr :tw<Space>@
nnoremap ,t/ :tw!/<Tab>
nnoremap ,th :tw!thread<Space>

nnoremap ,tt :yankinfo titleandurl<CR>: / <C-v><C-a>tw 
nnoremap ,tp :yankinfo titleandsurl<CR>: / <C-v><C-a>tw 
"nnoremap ,tp :<C-u>twuri<CR><C-a><Right><Right><Right>
"nnoremap ,tt :<C-u>echo [" /".buffer.title,buffer.URI].join(" "),modes.EX)<CR>:<Up><C-a>tw<Space><Space>/<Space><Left><Left><Left>

" Firefoxのタブを開く位置をデフォで現在のタブの右隣にする（※ gBrowser.addTabの改造）"
js <<EOM
gBrowser.addTab = liberator.eval(
    '(' +
    gBrowser.addTab.toSource()
            .replace(/var\s*aRelatedToCurrent;/, 'var aRelatedToCurrent = true;')
            .replace(/aRelatedToCurrent\s*=\s*params\.relatedToCurrent;/, 'aRelatedToCurrent = params.relatedToCurrent === undefined ? true : params.relatedToCurrent;') +
    ')',
    gBrowser.addTab);
EOM
